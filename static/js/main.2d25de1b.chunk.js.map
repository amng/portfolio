{"version":3,"sources":["transitions/CircularReveal/CircularReveal.tsx","components/ProjectTimeline.tsx","components/ProjectPreview.tsx","components/ImageGallery.tsx","components/ProjectInfo.tsx","Project.tsx","github-fm.ts","components/CVEntry.tsx","components/CompetenceEntry.tsx","cv.tsx","contacts.tsx","NotFound.tsx","navigation-bar.tsx","App.tsx","serviceWorker.ts","index.tsx","components/AnimatedIcon.tsx","portfolio.tsx"],"names":["CircularReveal","props","drawCircle","radius","style","transformOrigin","animationTime","timeout","classes","makeStyles","contentEnter","clipPath","contentEnterActive","transition","contentExit","contentExitActive","useStyles","in","unmountOnExit","classNames","enter","enterActive","exit","exitActive","addEndListener","children","year_content","display","flexWrap","opposite_content","flex","year_container","marginBottom","ProjectTimeline","yearContent","year","rows","projects","Object","keys","timelineData","projectsData","i","forEach","project","push","key","showProject","projectPath","projectType","projectName","previewImage","PreviewImage","className","years","length","variant","color","ProjectPreview","theme","preview_card","marginRight","width","cursor","media","height","backgroundColor","palette","action","disabledBackground","icon","fill","preview_image","mask","maskRepeat","maskPosition","maskSize","animated_preview","overflow","component","Link","to","Buffer","toString","onClick","event","projectClicked","undefined","endsWith","src","process","image","ImageGallery","React","useState","currentMedia","setCurrentMedia","loading","setLoading","nextMedia","useCallback","prevMedia","background_image","backgroundSize","background","backgroundRepeat","backgroundPosition","position","background_image_wrapper","gallery_pagination","marginTop","justifyContent","inner_background_image_wrapper","swippable_wrapper","useEffect","nextHandler","window","addEventListener","removeEventListener","Skeleton","onSwiped","eventData","deltaX","onSwipeEvent","Pagination","page","count","onChange","handleChangeMedia","size","avatar","margin","author_name","marginLeft","tag","description","url","project_name","ProjectInfo","Typography","info","ProjectName","authors","Avatar","alt","tags","Chip","label","urlNames","urlLinks","Button","href","ButtonGroup","disableElevation","aria-label","urls","Description","project_content_wrapper","default","left","top","project_content","padding","project_container","background_container_landscape","background_container","close_project_btn","float","zIndex","right","project_title","maxWidth","image_gallery","info_container_landscape","overflowY","info_container","Project","projectData","setProjectData","isLandscape","useMediaQuery","a","axios","create","baseURL","get","then","response","data","catch","error","console","log","finally","fetchData","document","body","IconButton","closeHandler","Grid","container","spacing","alignItems","item","xs","sm","GithubFm","newAxiosInstance","starting_url","axiosInstance","project_folders","this","currentInstance","place","alignSelf","minWidth","verticalAlign","year_portrait","top_info","flexDirection","top_info_portrait","position_portrait","place_portrait","CVEntry","direction","justify","gutterBottom","align","progress","whiteSpace","competence","competence_time","bottom","progress_container","CompetenceEntry","md","LinearProgress","value","max","experienceText","competences","profile_info","profile_info_text","profile_info_img","fab","main_container","paddingBottom","horizontal_line","visibility","horizontal_line_portrait","CV","Card","CardContent","Fab","contacts","link","contacts_wrapper","Contacts","List","aria-labelledby","ListItem","button","ListItemIcon","ListItemText","primary","page_not_found_wrapper","internal_wrapper","NotFound","root","flexGrow","paper","tabs","tab_content","paddingTop","theme_switch","app_bar","theme_icon","NavigationBar","location","useLocation","a11yProps","index","pathname","includes","id","AppBar","Tabs","split","scrollButtons","Tab","handleThemeChanged","darkModeActive","exact","path","portfolioData","App","localStorage","getItem","isDarkModeActive","setIsDarkModeActive","setData","normalTheme","createMuiTheme","colors","lime","secondary","deepOrange","darkTheme","type","blueGrey","githubfm","getFileStructure","basename","ThemeProvider","currentDarkMode","setItem","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","AnimationIcon","animation","setAnimation","isLoaded","setIsLOaded","div","dangerouslySetInnerHTML","__html","portfolio","portfolio_icon","text","portfolio_title_container","portfolio_title","portfolio_timeline","Portfolio","history","useHistory","useRouteMatch","strict","sensitive","getPathFromUrl","params","url_project_path","from","setProjectPath","projectVisibility","setProjectVisibility","projectClickPos","setProjectClickPos","handleProjectVisibility","newProjectPath","clientX","clientY"],"mappings":"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","file":"static/js/main.2d25de1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CSSTransition, } from 'react-transition-group';\r\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function CircularReveal(props: CSSTransitionProps) {\r\n\r\n\r\n   const drawCircle = function(radius: string)\r\n  {\r\n    const transform = 'circle(' + radius + ' at ' + props.style.transformOrigin + \")\";\r\n    return transform;\r\n  } \r\n\r\n  const animationTime = function()\r\n  {\r\n    const time = \"clip-path \" + props.timeout + \"ms\";\r\n    return time;\r\n  } \r\n\r\n  const useStyles = makeStyles({\r\n    contentEnter: {\r\n      clipPath: drawCircle(\"0%\"),\r\n    },\r\n    contentEnterActive: {\r\n      clipPath: drawCircle(\"200%\"),\r\n      transition: animationTime(),\r\n    },\r\n    contentExit: {\r\n      clipPath: drawCircle(\"200%\"),\r\n    },\r\n    contentExitActive: {\r\n      clipPath: drawCircle(\"0%\"),\r\n      transition: animationTime(),\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <CSSTransition\r\n      in={props.in}\r\n      timeout={props.timeout}\r\n      unmountOnExit\r\n      classNames={{\r\n        enter: classes.contentEnter,\r\n        enterActive: classes.contentEnterActive,\r\n        exit: classes.contentExit,\r\n        exitActive: classes.contentExitActive,\r\n      }}\r\n      addEndListener={()=>null}>\r\n      {props.children}\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\nimport ProjectPreview from './ProjectPreview';\r\n\r\nconst useStyles = makeStyles({\r\n    year_content:\r\n    {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    opposite_content:\r\n    {\r\n        flex: 0\r\n    },\r\n    year_container:\r\n    {\r\n       marginBottom: \"72px\",\r\n    }\r\n});\r\n\r\nexport default function ProjectTimeline(props: any) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const yearContent = function (year: string) {\r\n        const rows: JSX.Element[] = [];\r\n        const projects = Object.keys(props.timelineData[year]);\r\n        const projectsData = props.timelineData[year];\r\n        let i = 0;\r\n        projects.forEach(project => {\r\n            i++;\r\n            rows.push(<ProjectPreview key={i} showProject={props.showProject} projectPath={props.projectType+\"/\"+year+\"/\"+project} projectName={project} previewImage={projectsData[project].PreviewImage}  projectType={props.projectType}></ProjectPreview>);            \r\n        });\r\n        return rows;\r\n    }\r\n\r\n    const years = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (props.timelineData) {\r\n            const years = Object.keys(props.timelineData);\r\n            for (let i = 0; i < years.length; i++) {\r\n                rows.push(\r\n                    <div key={i}  className={classes.year_container}>\r\n                            <Typography variant=\"h4\" color=\"textSecondary\">\r\n                                {years[i]}\r\n                            </Typography>\r\n                            \r\n                            <div className={classes.year_content}>\r\n                            {yearContent(years[i])}\r\n                            </div>\r\n                    </div >\r\n                );\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {years()}\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles, Card, CardMedia, CardActions, CardActionArea } from '@material-ui/core';\r\nimport AnimationIcon from './AnimatedIcon';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ProjectPreview(props: { showProject: (arg0: React.MouseEvent<HTMLAnchorElement, MouseEvent>, arg1: any) => void; projectPath: string; projectType: string; previewImage: string | null | undefined; projectName: React.ReactNode; }) {\r\n    const icon = \"url(\\\"icon.html\\\")\";\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        preview_card: {\r\n            marginRight: \"12px\",\r\n            marginBottom: \"12px\",\r\n            width: \"260px\",\r\n            cursor: \"\"\r\n        },\r\n        media: {\r\n            width: \"260px\",\r\n            height: \"260px\",\r\n            backgroundColor: theme.palette.action.disabledBackground\r\n        },\r\n        icon:\r\n        {\r\n            '& path': {\r\n                fill: \"red\"\r\n            },\r\n            width: \"100%\",\r\n            height: \"260px\",\r\n            fill: \"red\",\r\n        },\r\n        preview_image:\r\n        {\r\n            mask: icon,\r\n            backgroundColor: \"red\",\r\n            maskRepeat: \"no-repeat\",\r\n            maskPosition: \"center\",\r\n            maskSize: \"260px\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        },\r\n        animated_preview:\r\n        {\r\n            width: \"100%\",\r\n            height: \"260px\",\r\n            overflow: \"hidden\"\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const projectClicked = function (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n        props.showProject(event, props.projectPath);\r\n    }\r\n\r\n    const getMedia = function () {\r\n        if (props.previewImage !== null && props.previewImage !== undefined && props.previewImage.endsWith(\".svg\")) {\r\n            return <CardMedia\r\n                className={classes.media}>\r\n                <AnimationIcon src={process.env.PUBLIC_URL + \"/\"+ props.previewImage} className={classes.animated_preview}></AnimationIcon>\r\n            </CardMedia>;\r\n        }\r\n        else {\r\n            return <CardMedia\r\n                className={classes.media}\r\n                image={process.env.PUBLIC_URL + \"/\" + props.previewImage}>\r\n            </CardMedia>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.preview_card}>\r\n            <CardActionArea component={Link} to={\"/\"+ props.projectType + \"/\" + new Buffer(props.projectPath).toString('base64')} \r\n            onClick={(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => projectClicked(event)}>\r\n                {getMedia()}\r\n                <CardActions>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                        {props.projectName}\r\n                    </Typography>\r\n                </CardActions>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Pagination, Skeleton } from '@material-ui/lab'\r\nimport { Swipeable, EventData } from 'react-swipeable'\r\n\r\n\r\nexport default function ImageGallery(props: any) {\r\n    const [currentMedia, setCurrentMedia] = React.useState<number>(0);\r\n    const [loading, setLoading] = React.useState<boolean>(true);\r\n    const handleChangeMedia = function (event: React.ChangeEvent<unknown>, page: number) {\r\n        setCurrentMedia(page - 1);\r\n    }\r\n\r\n    const getCurrentImage = function () {\r\n        return \"url(\\\"\" + process.env.PUBLIC_URL + \"/\" + props.media[currentMedia] + \"\\\");\";\r\n    }\r\n\r\n    const nextMedia = useCallback(() => {\r\n        if (currentMedia < props.media.length - 1)\r\n            setCurrentMedia(currentMedia + 1)\r\n    }, [currentMedia, props.media.length])\r\n\r\n    const prevMedia = useCallback(() => {\r\n        if (currentMedia > 0)\r\n            setCurrentMedia(currentMedia - 1)\r\n    }, [currentMedia])\r\n\r\n    const onSwipeEvent = (eventData: EventData) => {\r\n        if (eventData.deltaX > 0)\r\n            nextMedia()\r\n        else if (eventData.deltaX < 0)\r\n            prevMedia()\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        background_image:\r\n        {\r\n            backgroundSize: \"contain\",\r\n            background: getCurrentImage(),\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"relative\"\r\n        },\r\n        background_image_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        gallery_pagination:\r\n        {\r\n            marginTop: \"12px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n        },\r\n        inner_background_image_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swippable_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"calc(100% - 48px)\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const nextHandler = function (event: KeyboardEvent) {\r\n            if (event.key === \"ArrowLeft\") {\r\n                prevMedia();\r\n            }\r\n    \r\n            else if (event.key === \"ArrowRight\") {\r\n                nextMedia();\r\n            }\r\n        };\r\n        \r\n        if (typeof props.media !== \"undefined\" && props.media.length > 0) {\r\n            setLoading(false);\r\n            window.addEventListener(\"keydown\", nextHandler);\r\n            return () => {\r\n                window.removeEventListener(\"keydown\", nextHandler);\r\n            };\r\n        }\r\n        else {\r\n            setLoading(true);\r\n        }\r\n    }, [nextMedia, prevMedia, currentMedia, props]);\r\n\r\n    return (\r\n        <div className={classes.background_image_wrapper}>\r\n            {\r\n                loading ? <Skeleton /> :\r\n                    <div className={classes.inner_background_image_wrapper}>\r\n                        <Swipeable className={classes.swippable_wrapper} onSwiped={(eventData) => onSwipeEvent(eventData)} >\r\n                            <div className={classes.background_image}></div>\r\n                        </Swipeable>\r\n                        <Pagination page={currentMedia + 1} className={classes.gallery_pagination} color=\"secondary\" count={props.media.length} onChange={(event, page) => handleChangeMedia(event, page)} size=\"small\" />\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Avatar, Typography, makeStyles, Chip, Button, Link, ButtonGroup } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        display: \"flex\",\r\n        margin: \"12px\"\r\n    },\r\n    author_name:\r\n    {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    tag:\r\n    {\r\n        marginTop: \"12px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    description:\r\n    {\r\n        marginTop: \"24px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    url:\r\n    {\r\n        marginTop: \"24px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    project_name:\r\n    {\r\n        marginLeft: \"12px\",\r\n    }\r\n});\r\n\r\nexport default function ProjectInfo(props: any) {\r\n    const classes = useStyles();\r\n\r\n    const description = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Description\" in props.info) {\r\n            rows.push(\r\n                <Typography key={0} color=\"textPrimary\" className={classes.description} variant=\"body1\" component=\"div\">\r\n                    {props.info.Description}\r\n                </Typography>\r\n            );\r\n\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const urls = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"URL\" in props.info) {\r\n            const urlNames : string[] = Object.keys(props.info[\"URL\"]);\r\n            const urlLinks = props.info[\"URL\"];\r\n            for (let i = 0; i < urlNames.length; i++) {\r\n                rows.push(\r\n                    <Button key={i}>\r\n                        <Link color=\"inherit\" href={urlLinks[urlNames[i]]} variant=\"body2\">\r\n                        {urlNames[i]}\r\n                        </Link>\r\n                    </Button>\r\n                    \r\n                );\r\n            }\r\n        }\r\n        if (rows.length === 0)\r\n            return null;\r\n        \r\n        return <ButtonGroup disableElevation className={classes.url} variant=\"contained\" color=\"secondary\" aria-label=\"contained primary button group\">{rows}</ButtonGroup>;\r\n    }\r\n\r\n    const tags = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Tags\" in props.info) {\r\n            const tags = props.info[\"Tags\"];\r\n            for (let i = 0; i < tags.length; i++) {\r\n                rows.push(\r\n                    <Chip key={i} className={classes.tag} label={tags[i]} variant=\"outlined\" />\r\n                );\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const authors = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Authors\" in props.info) {\r\n            const authors = props.info[\"Authors\"];\r\n            for (let i = 0; i < authors.length; i++) {\r\n                if (authors[i] === \"Artur Gomes\") {\r\n                    rows.push(\r\n                        <div key={authors[i]} className={classes.avatar}>\r\n                            <Avatar alt={authors[i]} src=\"photo_cv.png\" />\r\n                            <Typography color=\"textPrimary\" className={classes.author_name} variant=\"subtitle2\" component=\"span\">\r\n                                {authors[i]}\r\n                            </Typography>\r\n                        </div>\r\n                    );\r\n                }\r\n                else {\r\n                    rows.push(\r\n                        <div key={authors[i]} className={classes.avatar}>\r\n                            <Avatar alt={authors[i]} src=\"\">\r\n                                {authors[i][0]}\r\n                            </Avatar>\r\n                            <Typography color=\"textPrimary\" className={classes.author_name} variant=\"subtitle2\" component=\"div\">\r\n                                {authors[i]}\r\n                            </Typography>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const getProjectField = function (key: string) {\r\n        return typeof props.info !== \"undefined\" && props.info !== null && key in props.info;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography color=\"textPrimary\" className={classes.project_name} variant=\"h4\" component=\"div\">\r\n                {getProjectField(\"ProjectName\") ? props.info.ProjectName : <Skeleton />}\r\n            </Typography>\r\n            {authors()}\r\n            <div>\r\n                {tags()}\r\n            </div>\r\n            {urls()}\r\n            {description()}\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios'\r\nimport ImageGallery from './components/ImageGallery';\r\nimport { Grid, useMediaQuery } from '@material-ui/core';\r\nimport ProjectInfo from './components/ProjectInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    project_content_wrapper: {\r\n        background: theme.palette.background.default,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        left: 0,\r\n        top: \"48px\",\r\n        position: \"fixed\",\r\n    },\r\n    project_content: {\r\n        padding: \"24px\",\r\n        height: \"calc(100% - 24px)\",\r\n    },\r\n    project_container:\r\n    {\r\n        height: \"calc(100% - 48px)\",\r\n    },\r\n    background_container_landscape:\r\n    {\r\n        height: \"100%\",\r\n    },\r\n    background_container:\r\n    {\r\n        height: \"50%\",\r\n    },\r\n    close_project_btn:\r\n    {\r\n        float: \"right\",\r\n        zIndex: 1000,\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n    },\r\n    project_title:\r\n    {\r\n        maxWidth: \"80%\",\r\n    },\r\n    image_gallery:\r\n    {\r\n        height: \"100%\"\r\n    },\r\n    info_container_landscape:\r\n    {\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        overflowY: \"auto\"\r\n    },\r\n    info_container:\r\n    {\r\n        height: \"50%\",\r\n        position: \"relative\",\r\n        overflowY: \"auto\"\r\n    }\r\n}));\r\n\r\nexport default function Project(props: any) {\r\n    const classes = useStyles();\r\n    const [projectData, setProjectData] = React.useState<{ [x: string]: any }>({});\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\r\n            axiosInstance.get(\"/project_data/\" + props.projectPath + \"/description.json\")\r\n                .then(async function (response: { [x: string]: any }) {\r\n                    if (response.data !== \"\")\r\n                        setProjectData(response.data);\r\n                    else\r\n                        setProjectData({ \"ProjectName\": \"No info available\" })\r\n                })\r\n                .catch(function (error: any) {\r\n                    // handle error\r\n                    console.log(error);\r\n                })\r\n                .finally(function () {\r\n                    // always executed\r\n                });\r\n        };\r\n        fetchData();\r\n        document.body.style.overflow = \"hidden\";\r\n    }, [props.projectPath]);\r\n\r\n\r\n    const getProjectDataArray = function (key: string) {\r\n        if (typeof projectData !== \"undefined\" && projectData !== null && key in projectData)\r\n            return projectData[key];\r\n        return [];\r\n    }\r\n\r\n    return (\r\n        <div className={classes.project_content_wrapper}>\r\n            <div className={classes.project_content}>\r\n            <IconButton\r\n             color=\"secondary\" className={classes.close_project_btn} onClick={(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => { props.closeHandler(event, \"hidden\") }}>\r\n                <CloseIcon></CloseIcon>\r\n            </IconButton>\r\n            <Grid className={classes.project_container} container spacing={1} alignItems=\"stretch\">\r\n                <Grid className={isLandscape ? classes.background_container_landscape : classes.background_container} item xs={12} sm={8}>\r\n                    <ImageGallery className={classes.image_gallery} media={getProjectDataArray(\"Media\")}></ImageGallery>\r\n                </Grid>\r\n                <Grid className={isLandscape ? classes.info_container_landscape : classes.info_container}  item xs={12} sm={4}>\r\n                    <ProjectInfo  info={projectData}></ProjectInfo>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\n\r\nclass GithubFm {\r\n    starting_url: string;\r\n    axiosInstance: AxiosInstance;\r\n    project_folders: any;\r\n    \r\n    constructor(public newAxiosInstance : AxiosInstance)\r\n    {\r\n        this.axiosInstance = newAxiosInstance;\r\n        this.starting_url = process.env.PUBLIC_URL + \"/project_data/fileStructure.json\";\r\n        this.project_folders = {};\r\n    }\r\n\r\n    async getFileStructure()\r\n    {\r\n        const currentInstance = this;\r\n        await this.axiosInstance.get(this.starting_url)\r\n        .then(async function (response: any) {\r\n            currentInstance.project_folders = response.data;\r\n        })\r\n        .catch(function (error: any) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .finally(function () {\r\n            // always executed\r\n        });\r\n    }\r\n}\r\n\r\nexport default GithubFm;\r\n\r\n  ","import React from 'react';\r\nimport { Typography, makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    place:\r\n    {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"0px\",\r\n        flex: 0.55,\r\n    },\r\n    year: {\r\n        minWidth: \"75px\",\r\n        verticalAlign: \"bottom\",\r\n    },\r\n    year_portrait: {\r\n        minWidth: \"75px\",\r\n        verticalAlign: \"bottom\",\r\n        marginBottom: \"-10px\"\r\n    },\r\n    top_info: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\"\r\n    },\r\n    top_info_portrait:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    position:\r\n    {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"0px\",\r\n        flex: 1        \r\n    },\r\n    position_portrait:\r\n    {\r\n        marginBottom: \"0px\",\r\n        flex: 1,\r\n        alignSelf: \"flex-start\"\r\n    },\r\n    place_portrait:\r\n    {\r\n        marginBottom: \"0px\",\r\n        alignSelf: \"flex-start\"\r\n    }\r\n});\r\n\r\nexport default function CVEntry(props: any) {\r\n    const classes = useStyles();\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={1}>\r\n            <Grid item xs={12} sm={2}>\r\n                <Typography className={isLandscape ? classes.year : classes.year_portrait} gutterBottom variant=\"button\" component=\"div\">\r\n                    {props.year}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10}>\r\n                <div>\r\n                    <div className={isLandscape ? classes.top_info : classes.top_info_portrait}>\r\n                        <Typography className={isLandscape ? classes.position : classes.position_portrait}  gutterBottom variant=\"h6\" component=\"div\" >\r\n                            {props.position}\r\n                        </Typography>\r\n                        <Typography className={isLandscape ? classes.place : classes.place_portrait} gutterBottom variant=\"caption\" component=\"div\" align=\"right\">\r\n                            {props.place}\r\n                        </Typography>\r\n                    </div>\r\n                    <Typography color=\"textSecondary\" gutterBottom variant=\"body2\" component=\"div\" align=\"justify\">\r\n                        {props.children}\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles, Grid, LinearProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    progress: {\r\n        height: \"100%\",\r\n        width: \"100px\",\r\n        margin: \"0px\",\r\n    },\r\n    container:\r\n    {\r\n        display: \"flex\",\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    competence: {\r\n        margin: \"0px\",\r\n    },\r\n    competence_time:{\r\n        position: \"absolute\",\r\n        right: \"12px\",\r\n        top: 0,\r\n        bottom: 0\r\n    },\r\n    progress_container: {\r\n        marginRight: \"12px\",\r\n        position: \"relative\",\r\n    },\r\n});\r\n\r\nexport default function CompetenceEntry(props: any) {\r\n    const classes = useStyles();\r\n\r\n    const percent = function()\r\n    {\r\n        return (props.value / props.max)*100;\r\n    }\r\n\r\n    const experienceText = function()\r\n    {\r\n        if (\"experienceText\" in props)\r\n        {\r\n            return props.experienceText;\r\n        }\r\n        if (props.value === 1)\r\n            return \"1 year\";\r\n        return props.value + \" years\";\r\n    }\r\n\r\n    return (\r\n            <Grid item md={4} sm={6} xs={12}>\r\n                <div className={classes.container}>\r\n                <div  className={classes.progress_container}>\r\n                    <LinearProgress className={classes.progress}  variant=\"determinate\" value={percent()}></LinearProgress>\r\n                    <Typography className={classes.competence_time} gutterBottom variant=\"body1\" component=\"div\">\r\n                        {experienceText()}\r\n                    </Typography>\r\n                </div>\r\n                <Typography className={classes.competence} gutterBottom variant=\"body1\" component=\"div\">\r\n                    {props.children}\r\n                </Typography>\r\n                </div>\r\n            </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CVEntry from './components/CVEntry';\r\nimport { Grid, Fab, Link, useMediaQuery } from '@material-ui/core';\r\nimport CompetenceEntry from './components/CompetenceEntry';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    competences: {\r\n        marginTop: \"24px\",\r\n        maxWidth: \"900px;\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n    profile_info:\r\n    {\r\n        marginTop: \"24px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    profile_info_text:\r\n    {\r\n        marginLeft: \"24px\",\r\n        marginRight: \"auto\"\r\n    },\r\n    profile_info_img:\r\n    {\r\n        width: \"130px\",\r\n        marginLeft: \"auto\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: \"24px\",\r\n        right: \"24px\",\r\n    },\r\n    main_container: {\r\n        paddingBottom: \"48px\",\r\n    },\r\n    horizontal_line: {\r\n        visibility: \"hidden\"\r\n    },\r\n    horizontal_line_portrait: {\r\n        visibility: \"visible\"\r\n    }\r\n});\r\n\r\nexport default function CV() {\r\n    const classes = useStyles();\r\n    const maxCompentence = 3;\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    return (\r\n        <div className={classes.main_container}>\r\n            <div className={classes.profile_info}>\r\n                <img className={classes.profile_info_img} alt=\"profile\" src=\"photo_cv.png\"></img>\r\n            <div className={classes.profile_info_text}>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\" component=\"div\">\r\n                        Artur Gomes\r\n                    </Typography>\r\n                    <Typography color=\"textPrimary\" variant=\"h5\" component=\"div\">\r\n                        C++ Software Engineer\r\n                    </Typography>\r\n            </div>\r\n            </div>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Profile\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"div\">\r\n                        Skilled and passionate software engineer with proven experience in C++, Java and Python.<br/>\r\n                        Been catching up with some of the current industry C++ standards (mostly 11 and 14) and reviewing some of the fundamentals in Data Structures and Algorithms, while preparing for the next position.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Competences\r\n                    </Typography>\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"flex-start\" spacing={3}>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>C++</CompetenceEntry>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>Java</CompetenceEntry>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>Python</CompetenceEntry>\r\n                    <CompetenceEntry value={1} max={maxCompentence}>Unreal Engine 4</CompetenceEntry>\r\n                    <CompetenceEntry value={0.5} max={maxCompentence} experienceText={\"6 months\"}>C</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>Android</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>Javascript</CompetenceEntry>\r\n                    <CompetenceEntry value={1} max={maxCompentence}>PHP</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>CSS</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>HTML</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>SQL</CompetenceEntry>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Experience\r\n                    </Typography>\r\n                    <CVEntry\r\n                        year=\"2018-2020\"\r\n                        place={\"Amadeus/Astek\"}\r\n                        position={\"Software Engineer C++\"}>\r\n                        Maintained and developed several mission critical C++ backend applications as a member of the Reservation and Departure Control synchronization team while contracted to Amadeus via Astek.<br />Highly contributed to the drastic reduction in the number of production issues (bugs, core dumps and memory leaks) from over 200 to around 20.<br />Fixed issues that had been in the backlog for many years.<br />Automated repetitive and recovery tasks using Python.<br />Reduced the runtime of tests of all our components by up to 75%.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2017-2018\"\r\n                        place={\"Mimicry Games, Lda\"}\r\n                        position={\"Software Engineer, Games and Virtual Reality\"}>\r\n                        Developed FingerPaint application for High Fidelity.<br />Worked on company VR project Ganbatte using Unreal Engine 4 which was released on the Steam platform after 9 months of development.<br />Successfully created all the single player levels, menus and websites for Ganbatte.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2015-2017\"\r\n                        place={\"Consipere - Software Lda\"}\r\n                        position={\"Software Engineer\"}>\r\n                        Worked on the full stack of the company, first as an Android developer then on server side using python and finally developed some firmware for sensors.<br />Reduced synchronization time of between the android application and server by over 50%.<br />Developed firmware for FemtoIO sensors using C++ for Arduino, which would collect data. This data would then be processed by Machine Learning algorithms to infer the type of movement applied to that sensor.<br />Re-purposed some pre-trained Machine Learning models and developed some tools to monitor the training using Python.\r\n                    </CVEntry>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Education\r\n                    </Typography>\r\n                    <CVEntry\r\n                        year=\"2014-2014\"\r\n                        place={\"Faculty of Letters, University of Porto\"}\r\n                        position={\"Intensive German Course - Level A1.1\"}>\r\n                        Learned the basics of German Language during a summer intensive course.Achieved a grade of 17 out of 20.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2009-2014\"\r\n                        place={\"Faculty of Engineering, University of Porto\"}\r\n                        position={\"Masters in Informatics and Computing Engineering\"}>\r\n                        Learned and developed programming skills and knowledge on Software Engineering.<br />Completed with grade 14 out of 20.<br />Wrote dissertation Procedural Generation Based on Affective Data which aimed to help game designers use procedural generation techniques to modify the gamers affective state.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2013-2013\"\r\n                        place={\"Faculty of Engineering and Architecture, Ghent University\"}\r\n                        position={\"Erasmus - 1 Semester\"}>\r\n                        Information Security, Information Theory, Introduction to Operations Research, Software Design Project.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"1999-2009\"\r\n                        place={\"Academia de Línguas de Madeira (ALM)\"}\r\n                        position={\"English Learning\"}>\r\n                        Certificate in Advanced English (CAE) from Cambridge.\r\n                    </CVEntry>\r\n                </CardContent>\r\n            </Card>\r\n            <Link href=\"agomesCV.pdf\">                \r\n                <Fab className={classes.fab} color=\"secondary\" aria-label=\"add\">\r\n                    <GetAppIcon />\r\n                </Fab>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Link, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\n\r\nconst useStyles = makeStyles({\r\n    contacts: {\r\n        margin: \"auto\",\r\n    },\r\n    link:\r\n    {\r\n\r\n    },\r\n    contacts_wrapper: {\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 24px)\",\r\n        marginTop: \"-48px\",\r\n        display: \"flex\",\r\n    },\r\n});\r\n\r\nexport default function Contacts() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.contacts_wrapper}>\r\n            <Card className={classes.contacts}>\r\n                <CardContent>\r\n                    <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"https://www.linkedin.com/in/amngomes\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <LinkedInIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"LinkedIn\" />\r\n\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"https://github.com/amng\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <GitHubIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub\" />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"mailto:arturngomes@gmail.com\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <AlternateEmailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText color=\"secondary\" primary=\"arturngomes@gmail.com\" />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AnimationIcon from './components/AnimatedIcon';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contacts: {\r\n        margin: \"auto\",\r\n    },\r\n    link:\r\n    {\r\n\r\n    },\r\n    page_not_found_wrapper: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 24px)\",\r\n        marginTop: \"-48px\",\r\n        display: \"flex\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    internal_wrapper:\r\n    {\r\n        margin: \"auto\"\r\n    },\r\n    icon: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function NotFound() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.page_not_found_wrapper}>\r\n            <div className={classes.internal_wrapper}>\r\n                <AnimationIcon src={process.env.PUBLIC_URL + \"/404.svg\"} className={classes.icon}></AnimationIcon>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h4\" component=\"div\" align=\"justify\">\r\n                    Page Not Found                    \r\n                </Typography>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Portfolio from './portfolio';\r\nimport CV from './cv';\r\nimport { IconButton } from '@material-ui/core';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport Contacts from './contacts';\r\nimport { Switch, Route, Link, useLocation, RouteProps } from 'react-router-dom';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabs:\r\n  {\r\n    flexGrow: 1,\r\n  },\r\n  tab_content:\r\n  {\r\n    paddingTop: \"72px\",\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: \"auto\"\r\n  },\r\n  theme_switch:\r\n  {\r\n    marginRight: \"24px\",\r\n  },\r\n  app_bar: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  theme_icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar(props: any) {\r\n  const classes = useStyles();\r\n  const location: RouteProps[\"location\"] = useLocation();\r\n\r\n  const a11yProps = function(index: string) {\r\n    if (!location.pathname.includes(\"university/\") && !location.pathname.includes(\"personal/\") )\r\n    document.body.style.overflow = \"overlay\";\r\n    return {\r\n      id: `scrollable-auto-tab-${index}`,\r\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.app_bar} position=\"fixed\">\r\n        <Tabs className={classes.tabs} value={\"/\"+location.pathname.split(\"/\")[1]} aria-label=\"simple tabs example\" variant=\"scrollable\" scrollButtons=\"on\">\r\n          <Tab component={Link} to={\"/\"} value={\"/\"} label=\"CV\" {...a11yProps(location.pathname)} />\r\n          <Tab component={Link} to={'/university'} value={\"/university\"} label=\"University\" {...a11yProps(location.pathname)} />\r\n          <Tab component={Link} to={'/personal'} value={\"/personal\"} label=\"Personal\" {...a11yProps(location.pathname)} />\r\n          <Tab component={Link} to={'/contacts'} value={\"/contacts\"} label=\"Contacts\" {...a11yProps(location.pathname)} />\r\n        </Tabs>\r\n        <div className={classes.theme_switch}>\r\n          <IconButton onClick={() => props.handleThemeChanged()} aria-label=\"change theme\" color=\"secondary\">\r\n            {props.darkModeActive ? <WbSunnyIcon /> : <NightsStayIcon />}\r\n          </IconButton>\r\n        </div>\r\n      </AppBar>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className={classes.tab_content}>\r\n            <CV></CV>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/university\">\r\n          <div className={classes.tab_content}>\r\n            <Portfolio projectType=\"university\" portfolioData={props.portfolioData}></Portfolio>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/personal\">\r\n          <div className={classes.tab_content}>\r\n            <Portfolio projectType=\"personal\" portfolioData={props.portfolioData}></Portfolio>\r\n          </div>\r\n        </Route>\r\n        <Route exact path=\"/contacts\">\r\n          <div className={classes.tab_content}>\r\n            <Contacts></Contacts>\r\n          </div>\r\n        </Route>\r\n        <Route>\r\n          <div className={classes.tab_content}>\r\n            <NotFound></NotFound>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport GithubFm from './github-fm'\nimport NavigationBar from './navigation-bar'\nimport './App.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { HashRouter } from 'react-router-dom';\n\nfunction App() {\n  const [isDarkModeActive, setIsDarkModeActive] = React.useState(localStorage.getItem('darkMode') === \"true\");\n  const [data, setData] = useState({});\n\n  const normalTheme = createMuiTheme({\n    palette: {\n      primary: colors.lime,\n      secondary: colors.deepOrange\n    },\n  });\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: colors.blueGrey\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\n      const githubfm = new GithubFm(axiosInstance);\n      await githubfm.getFileStructure();\n      setData(githubfm.project_folders);\n    };\n    fetchData();\n    document.body.style.overflow = \"overlay\";\n  }, []); // notice the empty array here, this is optional\n\n\n  const handleThemeChange = function () {\n    const currentDarkMode = isDarkModeActive;\n    setIsDarkModeActive(!currentDarkMode);\n    localStorage.setItem('darkMode', (!currentDarkMode).toString());\n   // changeTheme(!currentDarkMode);\n  };\n\n  return (\n    <HashRouter basename='/'>\n      <ThemeProvider theme={isDarkModeActive ? darkTheme : normalTheme}>\n        <NavigationBar darkModeActive={isDarkModeActive} handleThemeChanged={handleThemeChange} portfolioData={data} />\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport root from 'react-shadow';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nexport default function AnimationIcon(props: { src: string; className: string | undefined; }) {\r\n    const [animation, setAnimation] = React.useState(\"\");\r\n    const [isLoaded, setIsLOaded] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.src.endsWith(\".svg\"))\r\n        {\r\n            const fetchData = async () => {\r\n                const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\r\n                axiosInstance.get(props.src)\r\n                    .then(async function (response: { [x: string]: any }) {\r\n                        if (response.data !== \"\")\r\n                            setAnimation(response.data);\r\n                    })\r\n                    .catch(function (error: any) {\r\n                        // handle error\r\n                        console.log(error);\r\n                    })\r\n                    .finally(function () {\r\n                        // always executed\r\n                        setIsLOaded(true);\r\n                    });\r\n            };\r\n            setIsLOaded(false);\r\n            fetchData();\r\n        }        \r\n    }, [props.src]);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n        {\r\n            isLoaded \r\n            ? <root.div><div className={props.className} dangerouslySetInnerHTML={{__html: animation}}></div></root.div>\r\n            : <Skeleton  variant=\"rect\"  width=\"100%\" height=\"100%\" animation=\"wave\"></Skeleton>\r\n        }\r\n        </div> \r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularReveal from './transitions/CircularReveal/CircularReveal';\r\nimport Project from './Project';\r\nimport ProjectTimeline from './components/ProjectTimeline';\r\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    portfolio: {\r\n        position: \"relative\",\r\n    },\r\n    project_content: {\r\n        zIndex: 999,\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        left: 0,\r\n        top: 0\r\n    },\r\n    close_project_btn:\r\n    {\r\n        float: \"right\"\r\n    },\r\n    portfolio_icon:\r\n    {\r\n        color: theme.palette.text.primary,\r\n        height: \"48px\",\r\n        width: \"48px\"\r\n    },\r\n    portfolio_title_container:{\r\n        display: \"flex\",\r\n        marginLeft: \"24px\"\r\n    },\r\n    portfolio_title: {\r\n        marginLeft: \"24px\"\r\n    },\r\n    portfolio_timeline: {\r\n        marginLeft: \"24px\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function Portfolio(props: any) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    let match = useRouteMatch({\r\n        path: '/' + props.projectType + '/:project_path',\r\n        strict: true,\r\n        sensitive: true\r\n    });\r\n\r\n    const getPathFromUrl = function () {\r\n        if (match !== null && \"project_path\" in match.params) {\r\n            const url_project_path: string = match.params[\"project_path\"]\r\n            return Buffer.from(url_project_path, 'base64').toString('ascii')\r\n        }\r\n        return \"\";\r\n    }\r\n    const [projectPath, setProjectPath] = React.useState(getPathFromUrl());\r\n    const [projectVisibility, setProjectVisibility] = React.useState(getPathFromUrl() !== \"\" ? \"block\" : \"none\");\r\n    const [projectClickPos, setProjectClickPos] = React.useState([-1, -1]);\r\n\r\n    const showProject = function (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, newProjectPath: string) {\r\n        setProjectPath(newProjectPath);\r\n        setProjectClickPos([event.clientX, event.clientY-48]);\r\n        setProjectVisibility(\"block\");\r\n    }\r\n\r\n    const handleProjectVisibility = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>, value: React.SetStateAction<string>) => {\r\n        document.body.style.overflow = \"overlay\";\r\n        setProjectVisibility(value);\r\n        history.push(\"/\"+props.projectType);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (projectVisibility === \"block\")\r\n        {\r\n            document.body.style.overflow = \"hidden\";\r\n        }\r\n    }, [projectVisibility]);\r\n\r\n    const getProjectClickPosition = function () {\r\n        let s = \"\";\r\n        if (projectClickPos[0] === -1 && projectClickPos[1] === -1)\r\n            s = \"50% 50%\";\r\n        else\r\n            s = projectClickPos[0] + 'px ' + projectClickPos[1] + 'px';\r\n        return s;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.portfolio}>\r\n            <ProjectTimeline className={classes.portfolio_timeline} showProject={showProject} projectType={props.projectType} timelineData={props.portfolioData[props.projectType]}>\r\n            </ProjectTimeline>\r\n            <Route path={\"/\" + props.projectType + \"/:project_path\"}>\r\n            {({ match }) => (\r\n                <CircularReveal in={projectVisibility === \"block\" && match != null}\r\n                    timeout={500}\r\n                    style={{ transformOrigin: getProjectClickPosition() }}>\r\n                    \r\n                        <Project className={classes.project_content}\r\n                            closeHandler={handleProjectVisibility}\r\n                            projectPath={projectPath} />\r\n                </CircularReveal>\r\n             )}\r\n            </Route>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}