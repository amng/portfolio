{"version":3,"sources":["portfolio.tsx","transitions/CircularReveal/CircularReveal.tsx","components/ProjectTimeline.tsx","components/ProjectPreview.tsx","components/ImageGallery.tsx","components/ProjectInfo.tsx","Project.tsx","github-fm.ts","components/CVEntry.tsx","components/CompetenceEntry.tsx","cv.tsx","contacts.tsx","NotFound.tsx","navigation-bar.tsx","App.tsx","serviceWorker.ts","index.tsx","components/AnimatedIcon.tsx"],"names":["useStyles","makeStyles","portfolio","position","project_content","zIndex","width","height","left","top","close_project_btn","float","Portfolio","props","iconsMap","match","useRouteMatch","path","strict","sensitive","classes","history","useHistory","getPathFromUrl","params","url_project_path","Buffer","from","toString","React","useState","projectPath","setProjectPath","projectVisibility","setProjectVisibility","projectClickPos","setProjectClickPos","showProject","event","newProjectPath","clientX","clientY","handleProjectVisibility","value","document","body","style","overflow","push","useEffect","className","container","direction","justify","portfolioData","rows","types","Object","keys","icon","gridSize","length","i","key","item","xs","sm","projectType","timelineData","timelineIcon","getProjectTypes","in","timeout","transformOrigin","closeHandler","CircularReveal","drawCircle","radius","animationTime","contentEnter","clipPath","contentEnterActive","transition","contentExit","contentExitActive","unmountOnExit","classNames","enter","enterActive","exit","exitActive","addEndListener","children","opposite_content","flex","ProjectTimeline","yearContent","year","projects","projectsData","forEach","project","projectName","previewImage","PreviewImage","align","years","variant","color","undefined","ProjectPreview","preview_card","margin","cursor","media","backgroundColor","fill","preview_image","mask","maskRepeat","maskPosition","maskSize","animated_preview","component","Link","to","onClick","projectClicked","endsWith","src","image","ImageGallery","currentMedia","setCurrentMedia","loading","setLoading","nextMedia","useCallback","prevMedia","background_image","backgroundSize","background","backgroundRepeat","backgroundPosition","background_image_wrapper","gallery_pagination","marginTop","display","justifyContent","inner_background_image_wrapper","swippable_wrapper","nextHandler","window","addEventListener","removeEventListener","Skeleton","onSwiped","eventData","deltaX","onSwipeEvent","Pagination","page","count","onChange","handleChangeMedia","size","avatar","author_name","marginBottom","marginLeft","tag","description","url","project_name","ProjectInfo","Typography","info","ProjectName","authors","Avatar","alt","tags","Chip","label","urlNames","urlLinks","Button","href","ButtonGroup","disableElevation","aria-label","urls","Description","theme","project_content_wrapper","palette","default","padding","project_container","background_container_landscape","background_container","right","project_title","maxWidth","image_gallery","info_container_landscape","overflowY","info_container","Project","projectData","setProjectData","isLandscape","useMediaQuery","a","axios","create","baseURL","process","get","then","response","data","catch","error","console","log","finally","fetchData","IconButton","Grid","spacing","alignItems","GithubFm","newAxiosInstance","starting_url","axiosInstance","project_folders","this","currentInstance","place","alignSelf","minWidth","verticalAlign","year_portrait","top_info","flexDirection","top_info_portrait","position_portrait","place_portrait","CVEntry","gutterBottom","progress","whiteSpace","competence","competence_time","bottom","progress_container","marginRight","CompetenceEntry","md","LinearProgress","max","experienceText","competences","profile_info","profile_info_text","profile_info_img","fab","main_container","paddingBottom","horizontal_line","visibility","horizontal_line_portrait","CV","Card","CardContent","Fab","contacts","link","contacts_wrapper","Contacts","List","aria-labelledby","ListItem","button","ListItemIcon","ListItemText","primary","page_not_found_wrapper","internal_wrapper","NotFound","a11yProps","index","id","root","flexGrow","paper","tabs","tab_content","paddingTop","theme_switch","app_bar","theme_icon","NavigationBar","location","useLocation","AppBar","Tabs","pathname","split","Tab","handleThemeChanged","darkModeActive","exact","App","localStorage","getItem","isDarkModeActive","setIsDarkModeActive","setData","normalTheme","createMuiTheme","colors","lime","secondary","deepOrange","darkTheme","type","blueGrey","githubfm","getFileStructure","ThemeProvider","currentDarkMode","setItem","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","AnimationIcon","animation","setAnimation","div","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/main.9f017745.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularReveal from './transitions/CircularReveal/CircularReveal';\r\nimport Project from './Project';\r\nimport ProjectTimeline from './components/ProjectTimeline';\r\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    portfolio: {\r\n        position: \"relative\",\r\n    },\r\n    project_content: {\r\n        zIndex: 999,\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        left: 0,\r\n        top: 0\r\n    },\r\n    close_project_btn:\r\n    {\r\n        float: \"right\"\r\n    }\r\n});\r\n\r\n\r\nexport default function Portfolio(props: any) {\r\n    const iconsMap: { [key: string]: JSX.Element; } = {\r\n        \"Personal\": <PersonIcon />,\r\n        \"College\": <SchoolIcon />,\r\n    }\r\n    let match = useRouteMatch({\r\n        path: '/portfolio/:project_path',\r\n        strict: true,\r\n        sensitive: true\r\n    });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n\r\n    const getPathFromUrl = function () {\r\n        if (match !== null && \"project_path\" in match.params) {\r\n            const url_project_path: string = match.params[\"project_path\"]\r\n            return Buffer.from(url_project_path, 'base64').toString('ascii')\r\n        }\r\n        return \"\";\r\n    }\r\n    const [projectPath, setProjectPath] = React.useState(getPathFromUrl());\r\n    const [projectVisibility, setProjectVisibility] = React.useState(getPathFromUrl() !== \"\" ? \"block\" : \"none\");\r\n    const [projectClickPos, setProjectClickPos] = React.useState([-1, -1]);\r\n\r\n    const showProject = function (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, newProjectPath: string) {\r\n        setProjectPath(newProjectPath);\r\n        setProjectClickPos([event.clientX, event.clientY]);\r\n        setProjectVisibility(\"block\");\r\n    }\r\n\r\n    const handleProjectVisibility = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>, value: React.SetStateAction<string>) => {\r\n        document.body.style.overflow = \"overlay\";\r\n        setProjectVisibility(value);\r\n        history.push(\"/portfolio\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (projectVisibility === \"block\")\r\n        {\r\n            document.body.style.overflow = \"hidden\";\r\n        }\r\n    }, [projectVisibility]);\r\n\r\n    const getProjectClickPosition = function () {\r\n        let s = \"\";\r\n        if (projectClickPos[0] === -1 && projectClickPos[1] === -1)\r\n            s = \"50% 50%\";\r\n        else\r\n            s = projectClickPos[0] + 'px ' + projectClickPos[1] + 'px';\r\n        return s;\r\n    }\r\n\r\n    const getProjectTypes = function (portfolioData: { [key: string]: any }) {\r\n        const rows: JSX.Element[] = [];\r\n        if (typeof portfolioData !== 'undefined') {\r\n            const types = Object.keys(portfolioData);\r\n            let icon = null;\r\n            const gridSize: any = (12 / types.length);\r\n            for (let i = 0; i < types.length; i++) {\r\n                if (types[i] in iconsMap) {\r\n                    icon = iconsMap[types[i]];\r\n                }\r\n                rows.push(\r\n                    <Grid key={i} item xs={12} sm={gridSize}>\r\n                        <ProjectTimeline showProject={showProject} projectType={types[i]} timelineData={portfolioData[types[i]]} timelineIcon={icon}>\r\n                        </ProjectTimeline>\r\n                    </Grid>\r\n                );\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.portfolio}>\r\n            <Grid container direction=\"row\" justify=\"center\">\r\n                {getProjectTypes(props.portfolioData)}\r\n            </Grid>\r\n            <Route path=\"/portfolio/:project_path\">\r\n            {({ match }) => (\r\n                <CircularReveal in={projectVisibility === \"block\" && match != null}\r\n                    timeout={500}\r\n                    style={{ transformOrigin: getProjectClickPosition() }}>\r\n                    \r\n                        <Project className={classes.project_content}\r\n                            closeHandler={handleProjectVisibility}\r\n                            projectPath={projectPath} />\r\n                </CircularReveal>\r\n             )}\r\n            </Route>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { CSSTransition, } from 'react-transition-group';\r\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function CircularReveal(props: CSSTransitionProps) {\r\n\r\n\r\n   const drawCircle = function(radius: string)\r\n  {\r\n    const transform = 'circle(' + radius + ' at ' + props.style.transformOrigin + \")\";\r\n    return transform;\r\n  } \r\n\r\n  const animationTime = function()\r\n  {\r\n    const time = \"clip-path \" + props.timeout + \"ms\";\r\n    return time;\r\n  } \r\n\r\n  const useStyles = makeStyles({\r\n    contentEnter: {\r\n      clipPath: drawCircle(\"0%\"),\r\n    },\r\n    contentEnterActive: {\r\n      clipPath: drawCircle(\"200%\"),\r\n      transition: animationTime(),\r\n    },\r\n    contentExit: {\r\n      clipPath: drawCircle(\"200%\"),\r\n    },\r\n    contentExitActive: {\r\n      clipPath: drawCircle(\"0%\"),\r\n      transition: animationTime(),\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <CSSTransition\r\n      in={props.in}\r\n      timeout={props.timeout}\r\n      unmountOnExit\r\n      classNames={{\r\n        enter: classes.contentEnter,\r\n        enterActive: classes.contentEnterActive,\r\n        exit: classes.contentExit,\r\n        exitActive: classes.contentExitActive,\r\n      }}\r\n      addEndListener={()=>null}>\r\n      {props.children}\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\nimport { Timeline, TimelineItem, TimelineSeparator, TimelineDot, TimelineConnector, TimelineOppositeContent, TimelineContent } from '@material-ui/lab'\r\nimport ProjectPreview from './ProjectPreview';\r\n\r\nconst useStyles = makeStyles({\r\n    opposite_content:\r\n    {\r\n        flex: 0.5,\r\n    },\r\n});\r\n\r\nexport default function ProjectTimeline(props: any) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const yearContent = function (year: string) {\r\n        const rows: JSX.Element[] = [];\r\n        const projects = Object.keys(props.timelineData[year]);\r\n        const projectsData = props.timelineData[year];\r\n        let i = 0;\r\n        projects.forEach(project => {\r\n            i++;\r\n            rows.push(<ProjectPreview key={i} showProject={props.showProject} projectPath={props.projectType+\"/\"+year+\"/\"+project} projectName={project} previewImage={projectsData[project].PreviewImage}></ProjectPreview>);            \r\n        });\r\n        return rows;\r\n    }\r\n\r\n    const icon = function(i : number)\r\n    {\r\n        if (props.timelineIcon !== null && props.timelineIcon !== undefined)\r\n            return <TimelineDot>{props.timelineIcon}</TimelineDot>;\r\n        else \r\n            return <TimelineDot></TimelineDot>;\r\n    }\r\n\r\n    const years = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (props.timelineData) {\r\n            const years = Object.keys(props.timelineData);\r\n            for (let i = 0; i < years.length; i++) {\r\n                rows.push(\r\n                    <TimelineItem key={i}>\r\n                        <TimelineOppositeContent className={classes.opposite_content}>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                {years[i]}\r\n                            </Typography>\r\n                        </TimelineOppositeContent>\r\n                        <TimelineSeparator>\r\n                            {icon(i)}\r\n                            <TimelineConnector />\r\n                        </TimelineSeparator>\r\n                        <TimelineContent>\r\n                            {yearContent(years[i])}\r\n                        </TimelineContent>\r\n                    </TimelineItem >\r\n                );\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <Timeline align=\"left\">\r\n            {years()}\r\n        </Timeline >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles, Card, CardMedia, CardActions, CardActionArea } from '@material-ui/core';\r\nimport AnimationIcon from './AnimatedIcon';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ProjectPreview(props: { showProject: (arg0: React.MouseEvent<HTMLAnchorElement, MouseEvent>, arg1: any) => void; projectPath: string; previewImage: string | null | undefined; projectName: React.ReactNode; }) {\r\n    const icon = \"url(\\\"icon.html\\\")\";\r\n\r\n    const useStyles = makeStyles({\r\n        preview_card: {\r\n            margin: \"12px\",\r\n            width: \"180px\",\r\n            cursor: \"\"\r\n        },\r\n        media: {\r\n            height: \"140px\",\r\n            backgroundColor: \"grey\"\r\n        },\r\n        icon:\r\n        {\r\n            '& path': {\r\n                fill: \"red\"\r\n            },\r\n            width: \"100%\",\r\n            height: \"140px\",\r\n            fill: \"red\",\r\n        },\r\n        preview_image:\r\n        {\r\n            mask: icon,\r\n            backgroundColor: \"red\",\r\n            maskRepeat: \"no-repeat\",\r\n            maskPosition: \"center\",\r\n            maskSize: \"140px\",\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n        },\r\n        animated_preview:\r\n        {\r\n            width: \"100%\",\r\n            height: \"140px\",\r\n            overflow: \"hidden\"\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const projectClicked = function (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n        props.showProject(event, props.projectPath);\r\n    }\r\n\r\n    const getMedia = function () {\r\n        if (props.previewImage !== null && props.previewImage !== undefined && props.previewImage.endsWith(\".svg\")) {\r\n            return <CardMedia\r\n                className={classes.media}>\r\n                <AnimationIcon src={process.env.PUBLIC_URL + \"/\"+ props.previewImage} className={classes.animated_preview}></AnimationIcon>\r\n            </CardMedia>;\r\n        }\r\n        else {\r\n            return <CardMedia\r\n                className={classes.media}\r\n                image={process.env.PUBLIC_URL + \"/\" + props.previewImage}>\r\n            </CardMedia>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.preview_card}>\r\n            <CardActionArea component={Link} to={\"/portfolio/\" + new Buffer(props.projectPath).toString('base64')} \r\n            onClick={(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => projectClicked(event)}>\r\n                {getMedia()}\r\n                <CardActions>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                        {props.projectName}\r\n                    </Typography>\r\n                </CardActions>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Pagination, Skeleton } from '@material-ui/lab'\r\nimport { Swipeable, EventData } from 'react-swipeable'\r\n\r\n\r\nexport default function ImageGallery(props: any) {\r\n    const [currentMedia, setCurrentMedia] = React.useState<number>(0);\r\n    const [loading, setLoading] = React.useState<boolean>(true);\r\n    const handleChangeMedia = function (event: React.ChangeEvent<unknown>, page: number) {\r\n        setCurrentMedia(page - 1);\r\n    }\r\n\r\n    const getCurrentImage = function () {\r\n        return \"url(\\\"\" + process.env.PUBLIC_URL + \"/\" + props.media[currentMedia] + \"\\\");\";\r\n    }\r\n\r\n    const nextMedia = useCallback(() => {\r\n        if (currentMedia < props.media.length - 1)\r\n            setCurrentMedia(currentMedia + 1)\r\n    }, [currentMedia, props.media.length])\r\n\r\n    const prevMedia = useCallback(() => {\r\n        if (currentMedia > 0)\r\n            setCurrentMedia(currentMedia - 1)\r\n    }, [currentMedia])\r\n\r\n    const onSwipeEvent = (eventData: EventData) => {\r\n        if (eventData.deltaX > 0)\r\n            nextMedia()\r\n        else if (eventData.deltaX < 0)\r\n            prevMedia()\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        background_image:\r\n        {\r\n            backgroundSize: \"contain\",\r\n            background: getCurrentImage(),\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"relative\"\r\n        },\r\n        background_image_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        gallery_pagination:\r\n        {\r\n            marginTop: \"12px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n        },\r\n        inner_background_image_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swippable_wrapper:\r\n        {\r\n            width: \"100%\",\r\n            height: \"calc(100% - 48px)\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const nextHandler = function (event: KeyboardEvent) {\r\n            if (event.key === \"ArrowLeft\") {\r\n                prevMedia();\r\n            }\r\n    \r\n            else if (event.key === \"ArrowRight\") {\r\n                nextMedia();\r\n            }\r\n        };\r\n        \r\n        if (typeof props.media !== \"undefined\" && props.media.length > 0) {\r\n            setLoading(false);\r\n            window.addEventListener(\"keydown\", nextHandler);\r\n            return () => {\r\n                window.removeEventListener(\"keydown\", nextHandler);\r\n            };\r\n        }\r\n        else {\r\n            setLoading(true);\r\n        }\r\n    }, [nextMedia, prevMedia, currentMedia, props]);\r\n\r\n    return (\r\n        <div className={classes.background_image_wrapper}>\r\n            {\r\n                loading ? <Skeleton /> :\r\n                    <div className={classes.inner_background_image_wrapper}>\r\n                        <Swipeable className={classes.swippable_wrapper} onSwiped={(eventData) => onSwipeEvent(eventData)} >\r\n                            <div className={classes.background_image}></div>\r\n                        </Swipeable>\r\n                        <Pagination page={currentMedia + 1} className={classes.gallery_pagination} color=\"secondary\" count={props.media.length} onChange={(event, page) => handleChangeMedia(event, page)} size=\"small\" />\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Avatar, Typography, makeStyles, Chip, Button, Link, ButtonGroup } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        display: \"flex\",\r\n        margin: \"12px\"\r\n    },\r\n    author_name:\r\n    {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    tag:\r\n    {\r\n        marginTop: \"12px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    description:\r\n    {\r\n        marginTop: \"24px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    url:\r\n    {\r\n        marginTop: \"24px\",\r\n        marginLeft: \"12px\"\r\n    },\r\n    project_name:\r\n    {\r\n        marginLeft: \"12px\",\r\n    }\r\n});\r\n\r\nexport default function ProjectInfo(props: any) {\r\n    const classes = useStyles();\r\n\r\n    const description = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Description\" in props.info) {\r\n            rows.push(\r\n                <Typography key={0} color=\"textPrimary\" className={classes.description} variant=\"body1\" component=\"div\">\r\n                    {props.info.Description}\r\n                </Typography>\r\n            );\r\n\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const urls = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"URL\" in props.info) {\r\n            const urlNames : string[] = Object.keys(props.info[\"URL\"]);\r\n            const urlLinks = props.info[\"URL\"];\r\n            for (let i = 0; i < urlNames.length; i++) {\r\n                rows.push(\r\n                    <Button key={i}>\r\n                        <Link color=\"inherit\" href={urlLinks[urlNames[i]]} variant=\"body2\">\r\n                        {urlNames[i]}\r\n                        </Link>\r\n                    </Button>\r\n                    \r\n                );\r\n            }\r\n        }\r\n        if (rows.length === 0)\r\n            return null;\r\n        \r\n        return <ButtonGroup disableElevation className={classes.url} variant=\"contained\" color=\"secondary\" aria-label=\"contained primary button group\">{rows}</ButtonGroup>;\r\n    }\r\n\r\n    const tags = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Tags\" in props.info) {\r\n            const tags = props.info[\"Tags\"];\r\n            for (let i = 0; i < tags.length; i++) {\r\n                rows.push(\r\n                    <Chip key={i} className={classes.tag} label={tags[i]} variant=\"outlined\" />\r\n                );\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const authors = function () {\r\n        const rows: JSX.Element[] = [];\r\n        if (\"Authors\" in props.info) {\r\n            const authors = props.info[\"Authors\"];\r\n            for (let i = 0; i < authors.length; i++) {\r\n                if (authors[i] === \"Artur Gomes\") {\r\n                    rows.push(\r\n                        <div key={authors[i]} className={classes.avatar}>\r\n                            <Avatar alt={authors[i]} src=\"photo_cv.png\" />\r\n                            <Typography color=\"textPrimary\" className={classes.author_name} variant=\"subtitle2\" component=\"span\">\r\n                                {authors[i]}\r\n                            </Typography>\r\n                        </div>\r\n                    );\r\n                }\r\n                else {\r\n                    rows.push(\r\n                        <div key={authors[i]} className={classes.avatar}>\r\n                            <Avatar alt={authors[i]} src=\"\">\r\n                                {authors[i][0]}\r\n                            </Avatar>\r\n                            <Typography color=\"textPrimary\" className={classes.author_name} variant=\"subtitle2\" component=\"div\">\r\n                                {authors[i]}\r\n                            </Typography>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    const getProjectField = function (key: string) {\r\n        return typeof props.info !== \"undefined\" && props.info !== null && key in props.info;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography color=\"textPrimary\" className={classes.project_name} variant=\"h4\" component=\"div\">\r\n                {getProjectField(\"ProjectName\") ? props.info.ProjectName : <Skeleton />}\r\n            </Typography>\r\n            {authors()}\r\n            <div>\r\n                {tags()}\r\n            </div>\r\n            {urls()}\r\n            {description()}\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport axios from 'axios'\r\nimport ImageGallery from './components/ImageGallery';\r\nimport { Grid, useMediaQuery } from '@material-ui/core';\r\nimport ProjectInfo from './components/ProjectInfo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    project_content_wrapper: {\r\n        background: theme.palette.background.default,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        left: 0,\r\n        top: \"48px\",\r\n        position: \"fixed\",\r\n    },\r\n    project_content: {\r\n        padding: \"24px\",\r\n        height: \"calc(100% - 24px)\",\r\n    },\r\n    project_container:\r\n    {\r\n        height: \"calc(100% - 48px)\",\r\n    },\r\n    background_container_landscape:\r\n    {\r\n        height: \"100%\",\r\n    },\r\n    background_container:\r\n    {\r\n        height: \"50%\",\r\n    },\r\n    close_project_btn:\r\n    {\r\n        float: \"right\",\r\n        zIndex: 1000,\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n    },\r\n    project_title:\r\n    {\r\n        maxWidth: \"80%\",\r\n    },\r\n    image_gallery:\r\n    {\r\n        height: \"100%\"\r\n    },\r\n    info_container_landscape:\r\n    {\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        overflowY: \"auto\"\r\n    },\r\n    info_container:\r\n    {\r\n        height: \"50%\",\r\n        position: \"relative\",\r\n        overflowY: \"auto\"\r\n    }\r\n}));\r\n\r\nexport default function Project(props: any) {\r\n    const classes = useStyles();\r\n    const [projectData, setProjectData] = React.useState<{ [x: string]: any }>({});\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\r\n            axiosInstance.get(\"/project_data/\" + props.projectPath + \"/description.json\")\r\n                .then(async function (response: { [x: string]: any }) {\r\n                    if (response.data !== \"\")\r\n                        setProjectData(response.data);\r\n                    else\r\n                        setProjectData({ \"ProjectName\": \"No info available\" })\r\n                })\r\n                .catch(function (error: any) {\r\n                    // handle error\r\n                    console.log(error);\r\n                })\r\n                .finally(function () {\r\n                    // always executed\r\n                });\r\n        };\r\n        fetchData();\r\n    }, [props.projectPath]);\r\n\r\n\r\n    const getProjectDataArray = function (key: string) {\r\n        if (typeof projectData !== \"undefined\" && projectData !== null && key in projectData)\r\n            return projectData[key];\r\n        return [];\r\n    }\r\n\r\n    return (\r\n        <div className={classes.project_content_wrapper}>\r\n            <div className={classes.project_content}>\r\n            <IconButton\r\n             color=\"secondary\" className={classes.close_project_btn} onClick={(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => { props.closeHandler(event, \"hidden\") }}>\r\n                <CloseIcon></CloseIcon>\r\n            </IconButton>\r\n            <Grid className={classes.project_container} container spacing={1} alignItems=\"stretch\">\r\n                <Grid className={isLandscape ? classes.background_container_landscape : classes.background_container} item xs={12} sm={8}>\r\n                    <ImageGallery className={classes.image_gallery} media={getProjectDataArray(\"Media\")}></ImageGallery>\r\n                </Grid>\r\n                <Grid className={isLandscape ? classes.info_container_landscape : classes.info_container}  item xs={12} sm={4}>\r\n                    <ProjectInfo  info={projectData}></ProjectInfo>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\n\r\nclass GithubFm {\r\n    starting_url: string;\r\n    axiosInstance: AxiosInstance;\r\n    project_folders: any;\r\n    \r\n    constructor(public newAxiosInstance : AxiosInstance)\r\n    {\r\n        this.axiosInstance = newAxiosInstance;\r\n        this.starting_url = process.env.PUBLIC_URL + \"/project_data/fileStructure.json\";\r\n        this.project_folders = {};\r\n    }\r\n\r\n    async getFileStructure()\r\n    {\r\n        const currentInstance = this;\r\n        await this.axiosInstance.get(this.starting_url)\r\n        .then(async function (response: any) {\r\n            currentInstance.project_folders = response.data;\r\n        })\r\n        .catch(function (error: any) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .finally(function () {\r\n            // always executed\r\n        });\r\n    }\r\n}\r\n\r\nexport default GithubFm;\r\n\r\n  ","import React from 'react';\r\nimport { Typography, makeStyles, Grid, useMediaQuery } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    place:\r\n    {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"0px\",\r\n        flex: 0.55,\r\n    },\r\n    year: {\r\n        minWidth: \"75px\",\r\n        verticalAlign: \"bottom\",\r\n    },\r\n    year_portrait: {\r\n        minWidth: \"75px\",\r\n        verticalAlign: \"bottom\",\r\n        marginBottom: \"-10px\"\r\n    },\r\n    top_info: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\"\r\n    },\r\n    top_info_portrait:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    position:\r\n    {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"0px\",\r\n        flex: 1        \r\n    },\r\n    position_portrait:\r\n    {\r\n        marginBottom: \"0px\",\r\n        flex: 1,\r\n        alignSelf: \"flex-start\"\r\n    },\r\n    place_portrait:\r\n    {\r\n        marginBottom: \"0px\",\r\n        alignSelf: \"flex-start\"\r\n    }\r\n});\r\n\r\nexport default function CVEntry(props: any) {\r\n    const classes = useStyles();\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={1}>\r\n            <Grid item xs={12} sm={2}>\r\n                <Typography className={isLandscape ? classes.year : classes.year_portrait} gutterBottom variant=\"button\" component=\"div\">\r\n                    {props.year}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={10}>\r\n                <div>\r\n                    <div className={isLandscape ? classes.top_info : classes.top_info_portrait}>\r\n                        <Typography className={isLandscape ? classes.position : classes.position_portrait}  gutterBottom variant=\"h6\" component=\"div\" >\r\n                            {props.position}\r\n                        </Typography>\r\n                        <Typography className={isLandscape ? classes.place : classes.place_portrait} gutterBottom variant=\"caption\" component=\"div\" align=\"right\">\r\n                            {props.place}\r\n                        </Typography>\r\n                    </div>\r\n                    <Typography color=\"textSecondary\" gutterBottom variant=\"body2\" component=\"div\" align=\"justify\">\r\n                        {props.children}\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Typography, makeStyles, Grid, LinearProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    progress: {\r\n        height: \"100%\",\r\n        width: \"100px\",\r\n        margin: \"0px\",\r\n    },\r\n    container:\r\n    {\r\n        display: \"flex\",\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    competence: {\r\n        margin: \"0px\",\r\n    },\r\n    competence_time:{\r\n        position: \"absolute\",\r\n        right: \"12px\",\r\n        top: 0,\r\n        bottom: 0\r\n    },\r\n    progress_container: {\r\n        marginRight: \"12px\",\r\n        position: \"relative\",\r\n    },\r\n});\r\n\r\nexport default function CompetenceEntry(props: any) {\r\n    const classes = useStyles();\r\n\r\n    const percent = function()\r\n    {\r\n        return (props.value / props.max)*100;\r\n    }\r\n\r\n    const experienceText = function()\r\n    {\r\n        if (\"experienceText\" in props)\r\n        {\r\n            return props.experienceText;\r\n        }\r\n        if (props.value === 1)\r\n            return \"1 year\";\r\n        return props.value + \" years\";\r\n    }\r\n\r\n    return (\r\n            <Grid item md={4} sm={6} xs={12}>\r\n                <div className={classes.container}>\r\n                <div  className={classes.progress_container}>\r\n                    <LinearProgress className={classes.progress}  variant=\"determinate\" value={percent()}></LinearProgress>\r\n                    <Typography className={classes.competence_time} gutterBottom variant=\"body1\" component=\"div\">\r\n                        {experienceText()}\r\n                    </Typography>\r\n                </div>\r\n                <Typography className={classes.competence} gutterBottom variant=\"body1\" component=\"div\">\r\n                    {props.children}\r\n                </Typography>\r\n                </div>\r\n            </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CVEntry from './components/CVEntry';\r\nimport { Grid, Fab, Link, useMediaQuery } from '@material-ui/core';\r\nimport CompetenceEntry from './components/CompetenceEntry';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    competences: {\r\n        marginTop: \"24px\",\r\n        maxWidth: \"900px;\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n    profile_info:\r\n    {\r\n        marginTop: \"24px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    profile_info_text:\r\n    {\r\n        marginLeft: \"24px\",\r\n        marginRight: \"auto\"\r\n    },\r\n    profile_info_img:\r\n    {\r\n        width: \"130px\",\r\n        marginLeft: \"auto\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: \"24px\",\r\n        right: \"24px\",\r\n    },\r\n    main_container: {\r\n        paddingBottom: \"48px\",\r\n    },\r\n    horizontal_line: {\r\n        visibility: \"hidden\"\r\n    },\r\n    horizontal_line_portrait: {\r\n        visibility: \"visible\"\r\n    }\r\n});\r\n\r\nexport default function CV() {\r\n    const classes = useStyles();\r\n    const maxCompentence = 3;\r\n    const isLandscape = useMediaQuery('(min-width: 600px)');\r\n\r\n    return (\r\n        <div className={classes.main_container}>\r\n            <div className={classes.profile_info}>\r\n                <img className={classes.profile_info_img} alt=\"profile\" src=\"photo_cv.png\"></img>\r\n            <div className={classes.profile_info_text}>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\" component=\"div\">\r\n                        Artur Gomes\r\n                    </Typography>\r\n                    <Typography color=\"textPrimary\" variant=\"h5\" component=\"div\">\r\n                        C++ Software Engineer\r\n                    </Typography>\r\n            </div>\r\n            </div>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Profile\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"div\">\r\n                        Skilled and passionate software engineer with proven experience in C++, Java and Python.<br/>\r\n                        Been catching up with some of the current industry C++ standards (mostly 11 and 14) and reviewing some of the fundamentals in Data Structures and Algorithms, while preparing for the next position.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Competences\r\n                    </Typography>\r\n                    <Grid container alignItems=\"center\" direction=\"row\" justify=\"flex-start\" spacing={3}>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>C++</CompetenceEntry>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>Java</CompetenceEntry>\r\n                    <CompetenceEntry value={3} max={maxCompentence}>Python</CompetenceEntry>\r\n                    <CompetenceEntry value={1} max={maxCompentence}>Unreal Engine 4</CompetenceEntry>\r\n                    <CompetenceEntry value={0.5} max={maxCompentence} experienceText={\"6 months\"}>C</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>Android</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>Javascript</CompetenceEntry>\r\n                    <CompetenceEntry value={1} max={maxCompentence}>PHP</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>CSS</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>HTML</CompetenceEntry>\r\n                    <CompetenceEntry value={2} max={maxCompentence}>SQL</CompetenceEntry>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Experience\r\n                    </Typography>\r\n                    <CVEntry\r\n                        year=\"2018-2020\"\r\n                        place={\"Amadeus/Astek\"}\r\n                        position={\"Software Engineer C++\"}>\r\n                        Maintained and developed several mission critical C++ backend applications as a member of the Reservation and Departure Control synchronization team while contracted to Amadeus via Astek.<br />Highly contributed to the drastic reduction in the number of production issues (bugs, core dumps and memory leaks) from over 200 to around 20.<br />Fixed issues that had been in the backlog for many years.<br />Automated repetitive and recovery tasks using Python.<br />Reduced the runtime of tests of all our components by up to 75%.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2017-2018\"\r\n                        place={\"Mimicry Games, Lda\"}\r\n                        position={\"Software Engineer, Games and Virtual Reality\"}>\r\n                        Developed FingerPaint application for High Fidelity.<br />Worked on company VR project Ganbatte using Unreal Engine 4 which was released on the Steam platform after 9 months of development.<br />Successfully created all the single player levels, menus and websites for Ganbatte.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2015-2017\"\r\n                        place={\"Consipere - Software Lda\"}\r\n                        position={\"Software Engineer\"}>\r\n                        Worked on the full stack of the company, first as an Android developer then on server side using python and finally developed some firmware for sensors.<br />Reduced synchronization time of between the android application and server by over 50%.<br />Developed firmware for FemtoIO sensors using C++ for Arduino, which would collect data. This data would then be processed by Machine Learning algorithms to infer the type of movement applied to that sensor.<br />Re-purposed some pre-trained Machine Learning models and developed some tools to monitor the training using Python.\r\n                    </CVEntry>\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n            <Card className={classes.competences}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        Education\r\n                    </Typography>\r\n                    <CVEntry\r\n                        year=\"2014-2014\"\r\n                        place={\"Faculty of Letters, University of Porto\"}\r\n                        position={\"Intensive German Course - Level A1.1\"}>\r\n                        Learned the basics of German Language during a summer intensive course.Achieved a grade of 17 out of 20.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2009-2014\"\r\n                        place={\"Faculty of Engineering, University of Porto\"}\r\n                        position={\"Masters in Informatics and Computing Engineering\"}>\r\n                        Learned and developed programming skills and knowledge on Software Engineering.<br />Completed with grade 14 out of 20.<br />Wrote dissertation Procedural Generation Based on Affective Data which aimed to help game designers use procedural generation techniques to modify the gamers affective state.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"2013-2013\"\r\n                        place={\"Faculty of Engineering and Architecture, Ghent University\"}\r\n                        position={\"Erasmus - 1 Semester\"}>\r\n                        Information Security, Information Theory, Introduction to Operations Research, Software Design Project.\r\n                    </CVEntry>\r\n                    <hr className={isLandscape ? classes.horizontal_line : classes.horizontal_line_portrait}></hr>\r\n                    <CVEntry\r\n                        year=\"1999-2009\"\r\n                        place={\"Academia de Línguas de Madeira (ALM)\"}\r\n                        position={\"English Learning\"}>\r\n                        Certificate in Advanced English (CAE) from Cambridge.\r\n                    </CVEntry>\r\n                </CardContent>\r\n            </Card>\r\n            <Link href=\"agomesCV.pdf\">                \r\n                <Fab className={classes.fab} color=\"secondary\" aria-label=\"add\">\r\n                    <SaveIcon />\r\n                </Fab>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Link, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\n\r\nconst useStyles = makeStyles({\r\n    contacts: {\r\n        margin: \"auto\",\r\n    },\r\n    link:\r\n    {\r\n\r\n    },\r\n    contacts_wrapper: {\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 24px)\",\r\n        marginTop: \"-48px\",\r\n        display: \"flex\",\r\n    },\r\n});\r\n\r\nexport default function Contacts() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.contacts_wrapper}>\r\n            <Card className={classes.contacts}>\r\n                <CardContent>\r\n                    <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"https://www.linkedin.com/in/amngomes\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <LinkedInIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"LinkedIn\" />\r\n\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"https://github.com/amng\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <GitHubIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub\" />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                        <Link className={classes.link} color=\"secondary\"\r\n                            href=\"mailto:arturngomes@gmail.com\">\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <AlternateEmailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText color=\"secondary\" primary=\"arturngomes@gmail.com\" />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AnimationIcon from './components/AnimatedIcon';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contacts: {\r\n        margin: \"auto\",\r\n    },\r\n    link:\r\n    {\r\n\r\n    },\r\n    page_not_found_wrapper: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 24px)\",\r\n        marginTop: \"-48px\",\r\n        display: \"flex\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    internal_wrapper:\r\n    {\r\n        margin: \"auto\"\r\n    },\r\n    icon: {\r\n\r\n    }\r\n}));\r\n\r\nexport default function NotFound() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.page_not_found_wrapper}>\r\n            <div className={classes.internal_wrapper}>\r\n                <AnimationIcon src={process.env.PUBLIC_URL + \"/404.svg\"} className={classes.icon}></AnimationIcon>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h4\" component=\"div\" align=\"justify\">\r\n                    Page Not Found                    \r\n                </Typography>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Portfolio from './portfolio';\r\nimport CV from './cv';\r\nimport { IconButton } from '@material-ui/core';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport Contacts from './contacts';\r\nimport { Switch, Route, Link, useLocation, RouteProps } from 'react-router-dom';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nfunction a11yProps(index: string) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabs:\r\n  {\r\n    flexGrow: 1,\r\n  },\r\n  tab_content:\r\n  {\r\n    paddingTop: \"72px\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  theme_switch:\r\n  {\r\n    marginRight: \"24px\",\r\n  },\r\n  app_bar: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  theme_icon: {\r\n    verticalAlign: \"middle\"\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar(props: any) {\r\n  const classes = useStyles();\r\n  const location: RouteProps[\"location\"] = useLocation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.app_bar} position=\"fixed\">\r\n        <Tabs className={classes.tabs} value={\"/\"+location.pathname.split(\"/\")[1]} aria-label=\"simple tabs example\">\r\n          <Tab component={Link} to={\"/\"} value={\"/\"} label=\"CV\" {...a11yProps(location.pathname)} />\r\n          <Tab component={Link} to={'/portfolio'} value={\"/portfolio\"} label=\"Projects\" {...a11yProps(location.pathname)} />\r\n          <Tab component={Link} to={'/contacts'} value={\"/contacts\"} label=\"Contacts\" {...a11yProps(location.pathname)} />\r\n        </Tabs>\r\n        <div className={classes.theme_switch}>\r\n          <IconButton onClick={() => props.handleThemeChanged()} aria-label=\"change theme\" color=\"secondary\">\r\n            {props.darkModeActive ? <WbSunnyIcon /> : <NightsStayIcon />}\r\n          </IconButton>\r\n        </div>\r\n      </AppBar>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className={classes.tab_content}>\r\n            <CV></CV>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/portfolio\">\r\n          <div className={classes.tab_content}>\r\n            <Portfolio portfolioData={props.portfolioData}></Portfolio>\r\n          </div>\r\n        </Route>\r\n        <Route exact path=\"/contacts\">\r\n          <div className={classes.tab_content}>\r\n            <Contacts></Contacts>\r\n          </div>\r\n        </Route>\r\n        <Route>\r\n          <div className={classes.tab_content}>\r\n            <NotFound></NotFound>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport GithubFm from './github-fm'\nimport NavigationBar from './navigation-bar'\nimport './App.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  const [isDarkModeActive, setIsDarkModeActive] = React.useState(localStorage.getItem('darkMode') === \"true\");\n  const [data, setData] = useState({});\n\n  const normalTheme = createMuiTheme({\n    palette: {\n      primary: colors.lime,\n      secondary: colors.deepOrange\n    },\n  });\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: colors.blueGrey\n    },\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\n      const githubfm = new GithubFm(axiosInstance);\n      await githubfm.getFileStructure();\n      setData(githubfm.project_folders);\n    };\n    fetchData();\n  }, []); // notice the empty array here, this is optional\n\n\n  const handleThemeChange = function () {\n    const currentDarkMode = isDarkModeActive;\n    setIsDarkModeActive(!currentDarkMode);\n    localStorage.setItem('darkMode', (!currentDarkMode).toString());\n   // changeTheme(!currentDarkMode);\n  };\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={isDarkModeActive ? darkTheme : normalTheme}>\n        <NavigationBar darkModeActive={isDarkModeActive} handleThemeChanged={handleThemeChange} portfolioData={data} />\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport root from 'react-shadow';\r\n\r\nexport default function AnimationIcon(props: { src: string; className: string | undefined; }) {\r\n    const [animation, setAnimation] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (props.src.endsWith(\".svg\"))\r\n        {\r\n            const fetchData = async () => {\r\n                const axiosInstance = axios.create({ baseURL: process.env.PUBLIC_URL });\r\n                axiosInstance.get(props.src)\r\n                    .then(async function (response: { [x: string]: any }) {\r\n                        if (response.data !== \"\")\r\n                            setAnimation(response.data);\r\n                    })\r\n                    .catch(function (error: any) {\r\n                        // handle error\r\n                        console.log(error);\r\n                    })\r\n                    .finally(function () {\r\n                        // always executed\r\n                    });\r\n            };\r\n            fetchData();\r\n        }        \r\n    }, [props.src]);\r\n\r\n    return (\r\n        <div className={props.className}>\r\n        <root.div>\r\n        <div className={props.className} dangerouslySetInnerHTML={{__html: animation}}></div>\r\n        </root.div>\r\n        </div> \r\n    );\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}